spring:
  application:
    name: traceability-tutor
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${JDBC_DATABASE_URL:jdbc:postgresql://frankfurt-postgres.render.com/ttutor}
    username: ${JDBC_DATABASE_USERNAME:admin}
    password: ${JDBC_DATABASE_PASSWORD:UFvPDJudQbuYCp6mAiXwzjN7Mqf6hgby}
    dbcp2:
      max-wait-millis: 30000
      validation-query: select 1
      validation-query-timeout: 30
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    open-in-view: false
    properties:
      hibernate:
        format-sql: true
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: Ov23liK0394qW9swak2d
            client-secret: abea36565ba2e57f3e6dc429e05b3b478b36bbbd
            scope: read:user, public_repo
error:
  handling:
    http-status-in-json-response: true
    exception-logging: NO_LOGGING
    full-stacktrace-http-statuses: 5xx
    log-levels:
      5xx: ERROR
springdoc:
  pathsToMatch: /api/**

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG


security:
  jwt:
    token:
      secret-key: my-secret-key

app:
  jwt:
    # Signing key for HS512 algorithm
    # In http://www.allkeysgenerator.com/ you can generate all kinds of keys
    secret: v9y$B&E)H@MbQeThWmZq4t7w!z%C*F-JaNdRfUjXn2r5u8x/A?D(G+KbPeShVkYp
    expiration:
      minutes: 10
  oauth2:
    redirectUri: http://localhost:4200/oauth2/redirect
  cors:
    allowed-origins: http://localhost:4200